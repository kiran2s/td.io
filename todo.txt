- Review code
	- Make all GameObjects in shared abstract or use them for creating updates at the server.
- Improve performance
	- better data structure for holding updates
	- entity interpolation
		- tune interpolation time
		- compare performance with and without
		- interpolate in physics update loop?
			- maybe only half the time?
		- maybe replace interpolation with server sending more gamestates
	- pre-render if possible

- Player should be slightly offset from center of canvas depending on movement
- Client prediction for bullets
	- Move bullets to Weapon class

- Base 
	IDEAS
		-node improvements
			-BOOSTERS: allow nodes to spin on the "axis" of their parent
			-GUNS: either uni-directional or "heat-seeking"
				-gun improvements
			-EVIL MINIONS: pump out AI minions
			-COLLECT: able to harvest collectibles
			-DEFENSE: make harder to destroy.
			-SPIKES: damage player upon collision
			-RESPAWN (mother node): allow player to respawn 
		- spawn player next to base upon death
		- draw transparent node where actual node would be placed

- refactor input processing
- improved collision detection
	- ability to check collision by actual shape rather than bounding boxes (spatial hash) - necessary for large objects.
- Minimap
- Inventory
- Player Attributes
	IDEAS
		-player improvements
			-MOVE BASE: ability to relocate entire base
			-GUNS: either uni-directional or "heat-seeking"
				-gun improvements
			-SPIKES: damage player/base upon collision
			-SPEED
			-BOOST
	  		(and other diep-like upgrades)

- Leaderboard
- Indicator if base being attacked

- Add comments 

-----------------------------------------------------------------------
Bugs:
- setTranform affects clearing canvas

-----------------------------------------------------------------------

Performance:
100 update loops
100 collectibles

no spatial hash:
	baseline: 0-3ms
	peak:     110ms
	stream:   30-50ms
	
spatial hash:
	baseline: 0-6ms (20-30ms when moving mouse around)
	peak:     55ms
	stream:   10-35ms
- performance hit due to having to update hash objects
	- amplifies when moving cursor around for some reason

----------------------------------------------------------------------

Ideas:
- Press space for a dash (reduces health)

----------------------------------------------------------------------

- d3-quadtree:
var d3 = require("d3-quadtree");
let data = [{ x: 1, y: 2, mask: 0 }, { x: 3, y: 4, mask: 0 }, { x: 3, y: 3, mask: 1 }];
let tree = d3.quadtree()
    .x(function(d) { return d.x; })
    .y(function(d) { return d.y; })
    .addAll(data);
tree.x(function(d) { if (d.mask === 0) return d.x; })
    .y(function(d) { if (d.mask === 0) return d.y; });
let point = tree.find(3, 3, 3);
console.log(point);
