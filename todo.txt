- Improve performance
	- Improve collision detection code
		- reduce number of calculations
		- player-object collisions
		- collisions should reduce health

- d3-quadtree:
var d3 = require("d3-quadtree");
let data = [{ x: 1, y: 2, mask: 0 }, { x: 3, y: 4, mask: 0 }, { x: 3, y: 3, mask: 1 }];
let tree = d3.quadtree()
    .x(function(d) { return d.x; })
    .y(function(d) { return d.y; })
    .addAll(data);
tree.x(function(d) { if (d.mask === 0) return d.x; })
    .y(function(d) { if (d.mask === 0) return d.y; });
let point = tree.find(3, 3, 3);
console.log(point);

- Health bar
- Client/Server interaction

- Add comments

---------------------------------------------------------------------------

- client
	- game state update loop
		- capture input
		- update game state
	- draw loop
		- draw to canvas

- client/server
	- save inputs at clients
	- send updates to server
	- receive updates at clients
		- save server state
		- clear processed inputs
		- client prediction
		- entity interpolation

- server
	- client update loop
	- game state update loop
		- gather all inputs from clients
		- update game state
		- keep track of last input processed for each client
		- clear inputs

-----------------------------------------------------------------------
Bugs:
- setTranform affects clearing canvas

-----------------------------------------------------------------------

Additional node packages:
- Browserify

-----------------------------------------------------------------------
Setup:
$ browserify index.js -o bundle.js
$ node Server.js